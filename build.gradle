buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '4.24.14')
        classpath('pl.allegro.tech.build:axion-release-plugin:1.13.3')
    }
}

plugins {
    id "org.sonarqube" version "2.6.2"
    id "org.owasp.dependencycheck" version "7.4.4"
}

apply plugin: 'pl.allegro.tech.build.axion-release'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'
apply plugin: 'java'
apply plugin: 'idea'

jar {
    baseName = 'yti-spring-migration'
}

scmVersion {
    tag {
        prefix = "v"
        versionSeparator = ""
    }
}

project.version = scmVersion.version

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

repositories {
    mavenCentral()
    jcenter()
}

sourceCompatibility = 17
targetCompatibility = 17

ext {
    springVersion = '6.1.11'
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'fi.vm.yti'
            artifactId 'yti-spring-migration'
            version project.version

            pom.withXml {
                asNode().appendNode('description', 'Migration framework')
            }
            artifact jar
            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

artifactory {
    publish {
        defaults {
            publications('maven')
            publishArtifacts = true
            publishPom = true
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-autoconfigure:3.2.7'
    implementation 'org.springframework:spring-context:6.1.11'
    compileOnly "org.slf4j:slf4j-api:2.0.13"
    compileOnly "org.jetbrains:annotations:24.1.0"
    implementation 'jakarta.annotation:jakarta.annotation-api:3.0.0'
}

sonarqube {
    properties {
        property "sonar.projectKey", "yti-spring-migration"
        property "sonar.projectName", "yti-spring-migration"
        property("sonar.dependencyCheck.reportPath", "$buildDir/reports/dependency-check-report.xml")
        property("sonar.dependencyCheck.htmlReportPath", "$buildDir/reports/dependency-check-report.html")
    }
}

dependencyCheck {
    format = 'ALL'
    autoUpdate = false
    analyzers {
        centralEnabled = false
    }
    data {
        directory = System.getenv('OWASP_DATA_DIR')
    }
}
